#!/bin/bash
# Basic support for IRIX style chkconfig
###
# chkconfig: 235 90 45
# description: Starts talend components (Filebeat) on the server
###

# Comments to support LSB init script conventions  
### BEGIN INIT INFO
# Provides: talend-filebeat-%%%PRODUCT_VERSION%%%
# Required-Start: $local_fs $network $remote_fs
# Required-Stop: $local_fs $network $remote_fs
# Default-Start:  2 3 5
# Default-Stop:   1 4 6
# Short-Description: start and stop Talend Filebeat client daemon
# Description: Talend Filebeat client daemon
### END INIT INFO

FB_DIR=%%%FB_DIR%%%

# include the red hat init functions.
if [ -e /etc/rc.d/init.d/functions ]
then
  . /etc/rc.d/init.d/functions
fi

#JAVA_HOME environment variable needs to be set so that all the services can find it and the associated
#class path jars
#check to see if it's already set.
if [ -n "%%%JAVA_HOME%%%" ]; then
  export JAVA_HOME=%%%JAVA_HOME%%%
  if [ -n "$JAVA_HOME" -a -x $JAVA_HOME/bin/java ]; then
    # if it is not in PATH, add it there
    if [[ ":$PATH:" != *":$JAVA_HOME/bin:"* ]]; then
      export PATH=$JAVA_HOME/bin:$PATH
    fi
  fi
fi

# Set RUN_AS_USER to run it under specific user
#RUN_AS_USER=

#set the return value of the script to 0, which means no error.
RETVAL=0

if [ -n "$RUN_AS_USER" ]; then
  IDEXE="/usr/xpg4/bin/id"
  if [ ! -x $IDEXE ]; then
    IDEXE="/usr/bin/id"
    if [ ! -x $IDEXE ]; then
      IDEXE="id"
    fi
  fi
  if [ "`$IDEXE -u -n`" = "$RUN_AS_USER" ]; then
    # Already running as the configured user.  Avoid password prompts by not calling su.
    RUN_AS_USER=""
  fi
fi

start() {
  echo "About to start Talend Filebeat client daemon ..."
  if [ -z "FB_DIR" -o ! -x "$FB_DIR/filebeat" ]; then
    echo ""
    echo "Cannot start - the home folder is not defined or invalid !"
    RETVAL=1
  else

    cd $FB_DIR
    echo "Starting Talend Filebeat client ..."
    if [ -n "$RUN_AS_USER" ]; then
      su -m $RUN_AS_USER -s /bin/bash -c "nohup ./filebeat -c filebeat.yml -e >/dev/null 2>&1 &"
    else
      nohup ./filebeat -c filebeat.yml -e >/dev/null 2>&1 &
    fi
    echo "Talend Filebeat client daemon is started."

  fi
}

stop () {
  echo  "Shutting down Talend Filebeat client daemon ..."
  if [ -z "$FB_DIR" -o ! -x "$FB_DIR/filebeat" ]; then
    echo ""
    echo "Cannot stop Talend Filebeat client daemon - the home folder is not defined or invalid !"
    RETVAL=1
  else
    cd $FB_DIR
    FB_PID=`ps -ef | grep "filebeat -c" | grep -v grep | head -n 1 | awk '{ print $2 }'`
    #FR_PROCESS="`ps -p $DP_PID -o comm=`"
    if [ -n "$FB_PID" ]; then
      kill -15 $FB_PID
      for nTry in 1 2 3 4 5 6 7 8 9 10
      do
        sleep 1
        FB_PROCESS="`ps -p $FB_PID -o comm=`"
        if [ -z "$FB_PROCESS" ]; then
          break
        fi
      done
      if [ -n "$FB_PROCESS" ]; then
        # Soft kill was unsuccessful, we will try a hard kill
        kill -9 $FB_PID
        sleep 1
      fi
      echo "Talend Filebeat client daemon is stopped."


    else
      echo " no process is running."
    fi

  fi
}

restart() {
  stop
  sleep 3
  start
}

reload() {
	restart	
}	

case "$1" in
start)
	start
	;;
stop)
	stop
	;;
reload)
	reload
	;;
restart)
	restart
	;;
status)
        #below we look for the process running Talend Filebeat client daemon
        echo -n "Checking status of Talend Filebeat client daemon ..."
        STATUS=`ps -ef | grep "filebeat -c" | grep -v grep | wc -l`
        if [ ${STATUS} -gt 0 ]; then
	     #all are running.
	     echo " running."
        else
	     #not all running.
	     echo " stopped."
        fi
        ;;
*)
	echo $"Usage: $0 {start|stop|status|restart|reload}"
	RETVAL=3
esac
echo 
exit $RETVAL
